apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "eclipse-wtp"
apply plugin: "war"
apply plugin: "jetty"

sourceCompatibility = 1.7
webAppDirName = "webapp"

sourceSets {
  main {
    java {
      srcDir 'src/java'
    }
    resources {
      srcDir 'src/resources'
    }
  }
}

ext {
  junit_version = "4.8.2"
  sourceEncoding = "UTF-8"
  compilerEncoding = "UTF-8"
  servlet_api_version = "3.0.1"
  servlet_jsp_api_version = "2.3.1"
  jetty_version = "9.2.2.v20140723"
  spring_version = "4.0.6.RELEASE"
  spring_data_jpa_version = "1.6.2.RELEASE"
  hibernate_version = "4.3.5.Final"
  slf4j_version = "1.7.7"
  logback_version = "1.1.2"
  jstl_version = "1.2"
  aspectj_version = "1.7.4"
  shiro_version = "1.2.3"
  poi_version = "3.10-FINAL"
  commons_beanutils_version = "1.9.2"
  commons_collections_version = "4.0"
  commons_io_version = "2.4"
  commons_lang_version = "3.3.2"
  dom4j_version = "1.6.1"
  maven_compiler_plugin_version = "3.1"
  pinyin4j_version = "2.5.0"
  cxf_version = "3.0.1"
  activiti_spring_version = "5.16.2"
  groovy_version = "2.3.6"
  commons_fileupload_version = "1.3.1"
  jackson_version = "1.9.13"
  bonecp_version = "0.8.0.RELEASE"
  mysql_connector_java_version = "5.1.32"
}

repositories {
  mavenLocal()
  mavenCentral()
  mavenRepo urls: "http://repository.sonatype.org/content/groups/forge/"
}

dependencies {
    compile (
      // servlet start
      "javax.servlet:javax.servlet-api:${servlet_api_version}"
      ,"javax.servlet.jsp:javax.servlet.jsp-api:${servlet_jsp_api_version}"
      // jetty start
      ,"org.eclipse.jetty:jetty-server:${jetty_version}"
      ,"org.eclipse.jetty:jetty-util:${jetty_version}"
      ,"org.eclipse.jetty:jetty-webapp:${jetty_version}"
      ,"org.eclipse.jetty:jetty-jmx:${jetty_version}"
      ,"org.eclipse.jetty:jetty-io:${jetty_version}"
      ,"org.eclipse.jetty:jetty-servlet:${jetty_version}"
      ,"org.eclipse.jetty:jetty-security:${jetty_version}"
      ,"org.eclipse.jetty:jetty-http:${jetty_version}"
      ,"org.eclipse.jetty:jetty-xml:${jetty_version}"
      //jstl start
      ,"jstl:jstl:${jstl_version}"
      // log start
      ,"org.slf4j:slf4j-api:${slf4j_version}"
      ,"ch.qos.logback:logback-core:${logback_version}"
      ,"ch.qos.logback:logback-classic:${logback_version}"
      // poi start
      ,"org.apache.poi:poi:${poi_version}"
      ,"org.apache.poi:poi-ooxml:${poi_version}"
      ,"org.apache.poi:poi-ooxml-schemas:${poi_version}"
      // shiro start
      ,"org.apache.shiro:shiro-spring:${shiro_version}"
      ,"org.apache.shiro:shiro-ehcache:${shiro_version}"
      ,"org.apache.shiro:shiro-quartz:${shiro_version}"
      // activiti start
      ,"org.activiti:activiti-spring:${activiti_spring_version}"
      // spring start
      ,"org.springframework:spring-core:${spring_version}"
      ,"org.springframework:spring-context:${spring_version}"
      ,"org.springframework:spring-web:${spring_version}"
      ,"org.springframework:spring-webmvc:${spring_version}"
      ,"org.springframework:spring-orm:${spring_version}"
      ,"org.springframework:spring-tx:${spring_version}"
      ,"org.springframework:spring-test:${spring_version}"
      ,"org.springframework:spring-jdbc:${spring_version}"
      ,"org.springframework:spring-expression:${spring_version}"
      ,"org.springframework:spring-aop:${spring_version}"
      ,"org.springframework:spring-data-jpa:${spring_data_jpa_version}"
      // cxf start
      ,"org.apache.cxf:cxf-core:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-frontend-simple:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-frontend-jaxws:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-databinding-aegis:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-transports-local:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-transports-http:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-transports-http-jetty:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-transports-jms:${cxf_version}"
      ,"org.apache.cxf:cxf-rt-management:${cxf_version}"
      ,"org.apache.cxf:cxf-common-utilities:${cxf_version}"
      // hibernate start
      ,"org.hibernate:hibernate-core:${hibernate_version}"
      ,"org.hibernate:hibernate-entitymanager:${hibernate_version}"
      ,"org.hibernate:hibernate-proxool:${hibernate_version}"
      ,"org.hibernate:hibernate-ehcache:${hibernate_version}"
      // database pool start
      ,"com.jolbox:bonecp:${bonecp_version}"
      ,"mysql:mysql-connector-java:${mysql_connector_java_version}"
      // utils start
      ,"commons-beanutils:commons-beanutils:${commons_beanutils_version}"
      ,"org.apache.commons:commons-collections4:${commons_collections_version}"
      ,"commons-io:commons-io:${commons_io_version}"
      ,"org.apache.commons:commons-lang3:${commons_lang_version}"
      ,"commons-fileupload:commons-fileupload:${commons_fileupload_version}"
      ,"dom4j:dom4j:${dom4j_version}"
      ,"com.belerweb:pinyin4j:${pinyin4j_version}"
      ,"org.aspectj:aspectjrt:${aspectj_version}"
      ,"org.aspectj:aspectjweaver:${aspectj_version}"
      ,"org.codehaus.groovy:groovy-all:${groovy_version}"
      ,"org.codehaus.jackson:jackson-mapper-asl:${jackson_version}"
    )
    testCompile ("junit:junit:${junit_version}")
}

uploadArchives {
  repositories {
    flatDir {
      dirs 'repos'
    }
  }
}
